// g++ -o prob ./prob.cpp -no-pie
#include <cstring>
#include <unistd.h>
#include <cstddef>
#include <cstdio>

class Student {
    public:
        virtual void incCourseCount() = 0;
        virtual void decCourseCount() = 0;
};

class Vuln{
    private:
        char buf[0x10];
    public:
        void bof(){
            read(0,buf,0x100);
        }
};

class Course {
    private:
        Student **students;
        size_t nStudents;
    public:
    virtual ~Course(){
        for (size_t i=0;i<nStudents;i++){
            students[i]->decCourseCount();                      //ML-G
        }
        delete students;
    }
};

class Exam{
    private:
        size_t scoreA, scoreB, scoreC;
    public:
        char* topic;
        size_t score;
        virtual void updateAbsoluteScore(){
            score = scoreA+scoreB+scoreC;                       //ARITH-G
        }
};

typedef struct SimpleString{
    char *dest;
    char *src;
    size_t len;
    virtual void set(){
        strncpy(dest,src,len);                                  //W-G
    }
    virtual void setSource(char *s){
        src=s;
    }
}SimpleString;


Course *pCourse;
Exam *pExam;
SimpleString *pSimpleString;
Vuln *pVuln;
char coop_buf[0x400];

void fsb(){
    char buf[0x10];
    read(0,buf,0x10);
    printf(buf);
}

int main()
{
    setvbuf(stdout,0,2,0);
    pVuln = new Vuln;
    pCourse = new Course;
    pExam = new Exam;
    pSimpleString = new SimpleString;

    fsb();
    pVuln->bof();
    read(0,coop_buf,0x400);
    delete pCourse;

    return 0;
}

